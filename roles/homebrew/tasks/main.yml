---
- name: Ensure hombrew parent dir has correct perms
  file:
    path: "{{ hombrew_prefix }}"
    owner: root
    group: admin
    state: directory
    mode: 0775
  become: yes

- name: ensure hombrew diir exists
  file:
    path: "{{ hombrew_install_path }}"
    owner: "{{ ansible_user_id }}"
    group: admin
    state: directory
    mode: 0775
  become: yes

- name: ensure homebrew is installed
  git:
    repo: "{{ homebrew_repo }}"
    version: master
    dest: "{{ homebrew_install_path }}"
    update: no
    accept_hostkey: yes
    depth: 1

- name: ensure proper permissions on hombrew_brew_bin_path dirs
  files:
    path: "{{ homebrew_brew_bin_path }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: admin
    mode: 0775
  become: yes

- name: ensure proper ownership on homebrew_install_path  subdirs
  files:
    path: "{{ hombrew_install_path }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: admin
    recurse: true
  become: yes

- name: check if homebrew binary is in place
  stat: "path={{ hombrew_brew_bin_path }}/brew"
  register: hombrew_binary

- name: symlink brew to hombrew_brew_bin_path
  file:
    src: "{{ homebrew_install_path }}/bin/brew"
    dest: "{{ hombrew_brew_bin_path }}/brew"
    state: link
  when: homebrew_binary.stat.exists == false
  become: yes

- name: force update after install
  command: "{{ hombrew_brew_bin_path }}/brew update --force"
  when: homebrew_binary.stat.exists == false

- name: ensure config'd taps are tapped
  homebrew_tap: "tap={{ item }} state=present"
  with_items: "{{ homebrew_taps }}"

- name: ensure config'd brew packages are installed
  homebrew:
    name: "{{ item.name | default(item) }}"
    install_options: "{{ item.install_options | default(omit) }}"
    state: present
  with_items: "{{ homebrew_installed_packages }}"

- name: upgrade all homebrew packages
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages

- name: install configured cask applications
  homebrew_cask:
    name: "{{ item }}"
    state: present 
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_cask_apps }}"

- name: check for brewfile
  stat:
    path: "{{ homebrew_brewfile_dir }}/Brewfile"
  register: homebrew_brewfile

- name: install from brewfile
  command: "brew bundle chdir={{ homebrew_brewfile_dir }}"
  when: homebrew_brewfile.stat.exists and homebrew_use_brewfile

